---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cyberchef.fullname" . }}
  namespace: {{ include "cyberchef.namespace" . | quote }}
  labels:
    {{- include "cyberchef.labels" . | nindent 4 }}
    app.kubernetes.io/name: {{ include "cyberchef.fullname" . }}
    {{- if .Values.commonLabels }}
    {{- tpl (toYaml .Values.commonLabels) . | nindent 4 }}
    {{- end }}
  {{- if or .Values.deploymentAnnotations .Values.commonAnnotations }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- tpl (toYaml .Values.commonAnnotations) . | nindent 4 }}
    {{- end }}
    {{- if .Values.deploymentAnnotations }}
    {{- tpl (toYaml .Values.deploymentAnnotations) . | nindent 4 }}
    {{- end }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels: {{- include "cyberchef.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  strategy: {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "cyberchef.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- tpl (toYaml .Values.podLabels) . | nindent 8 }}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations: {{- tpl (toYaml .Values.podAnnotations) . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ include "cyberchef.serviceAccountName" . }}
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      {{- with (or .Values.image.pullSecrets .Values.global.imagePullSecrets) }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.runtimeClassName }}
      runtimeClassName: {{ . | quote }}
      {{- end }}
      {{- with .Values.schedulerName }}
      schedulerName: {{ . | quote }}
      {{- end }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- toYaml (omit .Values.podSecurityContext "enabled") | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers: {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ if .Values.image.registry }}{{ .Values.image.registry }}/{{ else if .Values.global.imageRegistry }}{{ .Values.global.imageRegistry }}/{{ end }}{{ .Values.image.repository }}{{ if .Values.image.digest }}@{{ .Values.image.digest }}{{ else }}:{{ .Values.image.tag }}{{ end }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- toYaml (omit .Values.containerSecurityContext "enabled") | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.args }}
          args: {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.lifecycleHooks }}
          lifecycle: {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- if .Values.extraEnvVars }}
            {{- tpl (toYaml .Values.extraEnvVars) . | nindent 12 }}
            {{- end }}
          {{- if .Values.extraEnvFrom }}
          envFrom: {{- tpl (toYaml .Values.extraEnvFrom) . | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ include "cyberchef.portName" . }}
              containerPort: 8000
              protocol: TCP
          {{- if .Values.customStartupProbe }}
          startupProbe: {{- toYaml .Values.customStartupProbe | nindent 12 }}
          {{- else if .Values.startupProbe.enabled }}
          startupProbe:
            tcpSocket:
              port: {{ include "cyberchef.portName" . }}
            initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.startupProbe.failureThreshold }}
            successThreshold: {{ .Values.startupProbe.successThreshold }}
          {{- end }}
          {{- if .Values.customStartupProbe }}
          livenessProbe: {{- toYaml .Values.customLivenessProbe | nindent 12 }}
          {{- else if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ include "cyberchef.portName" . }}
              httpHeaders:
                - name: X-Http-Method-Override
                  value: HEAD
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.customStartupProbe }}
          readinessProbe: {{- toYaml .Values.customReadinessProbe | nindent 12 }}
          {{- else if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ include "cyberchef.portName" . }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.extraVolumeMounts }}
          volumeMounts: {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.extraVolumes }}
      volumes: {{- toYaml . | nindent 8 }}
      {{- end }}
